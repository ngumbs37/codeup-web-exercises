[
    {
        "title": "My First Blog Post",
        "content": "Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
        "categories": [
            "greek"
        ],
        "date": "January 25, 2015"
    }, {
        "title": "The Second Post",
        "content": "Cupcake ipsum dolor sit amet gummies. Cake chocolate sweet ice cream oat cake biscuit bear claw dessert. Jujubes marzipan toffee apple pie pastry dragée jujubes marshmallow. Dragée chocolate gingerbread liquorice chocolate bar jujubes. Sweet chocolate bar jelly-o chocolate cake candy carrot cake cotton candy macaroon marzipan. Sweet roll biscuit sweet gummies topping sesame snaps tootsie roll sugar plum pie. Sweet muffin croissant chocolate cake chupa chups. Donut croissant gummies donut powder ice cream. Chupa chups halvah apple pie topping jelly beans donut candy canes donut. Bonbon cake gummi bears cheesecake tart topping powder liquorice gummi bears.",
        "categories": [
            "family",
            "candy",
            "sweets",
            "sugar"
        ],
        "date": "February 14, 2015"
    },
    {
        "title": "Blog Construction",
        "content": "I linked in jquery and boostrap after creating and setting up html. Using jquery I was able to select the div with the id of 'posts.' Then I added a line to get the information from blog.json then console logged the results. After analyzing the information in the console, I noticed the information was an array of objects and the objects didn't contain any other data types other than strings and arrays. I set up a forEach on the array to get to the individual objects. Using dot-notation I was able to get the information contained in each of the properties. For the array within the object, I passed it as an argument to another function that will go through and get the information in each index and returned the array together as a concatenated string.",

        "categories": [
            "html",
            "bootstrap",
            "jquery",
            "javascript"
        ],
        "date": "December 13, 2018"
    }
]
